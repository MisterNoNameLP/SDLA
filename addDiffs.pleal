local version = "1.2"

package.path = package.path .. ";libs/?.lua"

local ut = require("UT")
local lfs = require("lfs")
local xml = require("xml2lua")
local xmlHandler = require("xmlhandler.tree")

local diffLockAddonSocket = {
	_attr = {DefaultAddon = "zikz_5368_diff_lock_default"},
	Socket = {
		_attr = {
			Names = "ZiKZ5368DiffLock",
			Offset = "(0; 0; 0)",
			ParentFrame = "BoneChassis_cdt"
		}
	}
}
local modifiedDiffLockPath = "./output/[media]/classes/trucks/zikz_5368_tuning"
local modifiedDiffLockName = "zikz_5368_diff_lock.xml"
local modifiedDiffLock = [[
<_templates Include="trucks" />
<TruckAddon>
	<TruckData DiffLockInstalled="true" />
	<PhysicsModel _template="Invisible" />
	<GameData
		CameraPreset="hoods"
		Category="diff_lock"
		Price="4300"
		UnlockByExploration="false"
		UnlockByRank="1"
	>
		<UiDesc
			UiDesc="UI_UPGRADE_DIFF_LOCK_SWITCHABLE_DESC"
			UiIcon30x30=""
			UiIcon40x40=""
			UiName="UI_UPGRADE_DIFF_LOCK_SWITCHABLE_NAME"
		/>
		<InstallSocket Type="ZiKZ5368DiffLock" />
	</GameData>
</TruckAddon>
]]

local function copyTable(org)
	local copy
	if type(org) == "table" then
		copy = {}
		for key, value in pairs(org) do
			copy[key] = copyTable(value)
		end
	else
		copy = org
	end
	return copy
end

local function addDiff(path)
	print("Load file: $path")
	local truckHandler = xmlHandler:new()
	local xmlParser = xml.parser(truckHandler)
	xmlParser:parse(xml.loadFile(path))
	local _, name, ending = ut.seperatePath(path)
	local hasDifflock

	do
		if truckHandler.root.Truck.TruckData._attr.DiffLockType == "Always" then
			hasDifflock = true
		else
			for i, v in pairs(truckHandler.root.Truck.GameData.AddonSockets) do
				if v._attr and v._attr.DefaultAddon and v._attr.DefaultAddon:find("diff_lock") then
					hasDifflock = true
				end
			end
		end
	end
	
	if not hasDifflock then
		print("Adding difflock to: $name")

		if truckHandler.root.Truck.TruckData._attr.DiffLockType == "None" then
			truckHandler.root.Truck.TruckData._attr.DiffLockType = "Uninstalled"
		end

		table.insert(truckHandler.root.Truck.GameData.AddonSockets, copyTable(diffLockAddonSocket))
	end

	return xml.toXml(truckHandler.root)
end

local function addDir(path)
	local len = path:find("/")
	local outputPath = "output/" .. path:sub(len + 1)
	local outputString 
	
	do 
		local currentPath = ""
		for segment in outputPath:gmatch("[^/]+") do
			currentPath = "$currentPath$segment/"
			lfs.mkdir(currentPath)
		end
	end

	for file in lfs.dir(path) do
		if file:sub(1, 1) ~= "." then
			if lfs.attributes("$path/$file").mode == "file" then
				local path, name, ending = ut.seperatePath("$path/$file")
				local fileHandler
				local suc, err

				suc, err = xpcall(addDiff, debug.traceback, "$path/$file")
				if suc then
					outputString = err
					fileHandler = io.open("$outputPath/$name$ending", "w")
					fileHandler:write(outputString)
					fileHandler:flush()
					fileHandler:close()
				else
					print("ERROR: Could not load file: $path/$file")
				end
			end
		end
	end
end

local function parseInitial(path)
	print("Parse dir: $path")
	for file in lfs.dir(path) do
		if file:sub(1, 1) ~= "." then
			if lfs.attributes("$path/$file").mode == "directory" then
				if file == "trucks" then
					addDir("$path/$file")
				else
					parseInitial("$path/$file")
				end
			end
		end
	end
end

print("Starting difflock adder v$version")

parseInitial("initial")
parseInitial("mods")

do
	lfs.mkdir(modifiedDiffLockPath)
	local file = io.open("$modifiedDiffLockPath/$modifiedDiffLockName", "w")
	file:write(modifiedDiffLock)
	file:flush()
	file:close()
end

print("Done!")